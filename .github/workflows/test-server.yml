# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: test-server

on: [push]

env:
  MONGODB_USER: TestUser
  MONGODB_PASSWORD: testPassword
  MONGODB_DB: weGoNice
  TEST_DB_URI: mongodb://localhost:27017

jobs:
  test-server:
    name: server-test
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
          MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
          MONGO_INITDB_DATABASE: ${MONGODB_DB}
        ports:
          - 27017-27019:27017-27019
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
          --name mongodb

    steps:
      - name: Checkout source
        uses: actions/checkout@v1

      - name: Setup database
        run: |
          docker exec mongodb mongosh ${MONGODB_DB} -u ${MONGODB_USER} -p ${MONGDB_PASSWORD} --authenticationDatabase admin --eval "db.createUser({user: 'TestUser', pwd: 'testPassword', roles: [{role: 'readWrite', db: 'weGoNice'}]})"

      - name: Run tests
        run: |
          cd ./source/server/pkg
          go test ./users
          go test ./authors
