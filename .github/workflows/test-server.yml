# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: test-server

on: [push]

env:
  TEST_DB_URI: mongodb://localhost:27017
  MONGO_INIT_ROOT_USERNAME: TestUser
  MONGO_INITDB_ROOT_PASSWORD: testPassword
  MONGO_INITDB_DATABASE: weGoNice

jobs:
  test-server:
    name: server-test
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{env.MONGO_INIT_ROOT_USERNAME}}
          MONGO_INITDB_ROOT_PASSWORD: ${{env.MONGO_INITDB_ROOT_PASSWORD}}
          MONGO_INITDB_DATABASE: ${{env.MONGO_INITDB_DATABASE}}
        ports:
          - 27017-27019:27017-27019
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
          --name mongodb

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup database
        run: |
          docker exec mongodb mongosh weGoNice -u ${{env.MONGO_INIT_ROOT_USERNAME}} -p ${{env.MONGO_INITDB_ROOT_PASSWORD}} --authenticationDatabase admin --eval "db.createUser({user: 'TestUser', pwd: 'testPassword', roles: [{role: 'readWrite', db: 'weGoNice'}]})"

      - name: File Depots for Tests
        run: |
          cd ./source/server/pkg/testUtils/files
          mkdir perm
          mkdir tmp

      - name: Run tests
        run: |
          cd ./source/server/pkg
          go test ./users
          go test ./authors
