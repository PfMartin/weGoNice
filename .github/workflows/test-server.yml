# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: test-server

on: [push]

env:
  TEST_DB_URI: mongodb://mongodb:27017

jobs:
  container-job:
    name: server-test
    runs-on: ubuntu-latest    
    container:
      image: golang:1.18-buster

    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_USERNAME: TestUser
          MONGO_INITDB_PASSWORD: testPassword
          MONGO_INITDB_DATABASE: weGoNiceTest
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
          --name weGoNice-test-db

    steps:
      - name: Checkout source
        uses: actions/checkout@v1
      
      - name: Create User for tests
        run: |
          apt-get update
          apt-get install ca-certificates curl gnupg lsb-release -y
          mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install docker-ce docker-ce-cli containerd.io -y
          docker exec weGoNice-test-db mongosh weGoNice -u TestUser -p testPassword --authenticationDatabase admin --eval "db.createUser({user: 'TestUser', pwd: 'testPassword', roles: [{role: 'readWrite', db: 'weGoNice'}]})"
      
      - name: Run tests
        run: |
          cd ./source/server/pkg
          go test ./users
          go test ./authors
