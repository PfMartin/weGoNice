# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: test-server

on: [push]

env:
  TEST_DB_URI: mongodb://mongodb:27017

jobs:
  test-server:
    name: server-test
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: TestUser
          MONGO_INITDB_ROOT_PASSWORD: testPassword
          MONGO_INITDB_DATABASE: weGoNice
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
          --name mongodb

    steps:
      - name: Checkout source
        uses: actions/checkout@v1
      
      - name: Create User for tests
        run: |
          docker exec mongodb mongosh weGoNice -u TestUser -p testPassword --authenticationDatabase admin --eval "db.createUser({user: 'TestUser', pwd: 'testPassword', roles: [{role: 'readWrite', db: 'weGoNice'}]})"
      
      - name: Run tests
        run: |
          cd ./source/server/pkg
          go test ./users
          go test ./authors
